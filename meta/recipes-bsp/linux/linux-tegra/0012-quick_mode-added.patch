From 5ac7de16b7b414eabb0dd2b1b7eab1b12ea66635 Mon Sep 17 00:00:00 2001
From: Botond Kardos <bkardos70@gmail.com>
Date: Thu, 13 Jan 2022 14:47:42 +0100
Subject: [PATCH] quick_mode added, test_mode added for Dione1280

---
 nvidia/drivers/media/i2c/dione_ir.c           | 157 +++++++++++-------
 .../tegra210-camera-rbpcv2-dione-ir.dtsi      |   2 -
 2 files changed, 93 insertions(+), 66 deletions(-)

diff --git a/nvidia/drivers/media/i2c/dione_ir.c b/nvidia/drivers/media/i2c/dione_ir.c
index 75fbab9acae2..b6670ab925f9 100644
--- a/nvidia/drivers/media/i2c/dione_ir.c
+++ b/nvidia/drivers/media/i2c/dione_ir.c
@@ -43,10 +43,19 @@
 #define DIONE1280_REG_HEIGHT_MAX       0x0002f02c
 #define DIONE1280_REG_MODEL_NAME       0x00000044
 #define DIONE1280_REG_FIRMWARE_VERSION 0x2000e000
+#define DIONE1280_REG_ACQUISITION_STOP 0x00080104
+#define DIONE1280_REG_ACQUISITION_SRC  0x00080108
+#define DIONE1280_REG_ACQUISITION_STAT 0x0008010c
 
 #define DIONE1280_I2C_TMO_MS           5
+#define DIONE1280_STARTUP_TMO_MS       15000
 
 
+static int test_mode = 0;
+static int quick_mode = 1;
+module_param(test_mode, int, 0644);
+module_param(quick_mode, int, 0644);
+
 enum {
 	DIONE_IR_MODE_640x480_60FPS,
 	DIONE_IR_MODE_1280x1024_60FPS,
@@ -60,16 +69,12 @@ static const int dioneir_60fps[] = {
  * WARNING: frmfmt ordering need to match mode definition in
  * device tree!
  */
-static const struct camera_common_frmfmt dione640_frmfmt[] = {
+static const struct camera_common_frmfmt dioneir_frmfmt_common[] = {
 	{{640, 480},	dioneir_60fps, 1, 0, DIONE_IR_MODE_640x480_60FPS},
 	{{1280, 1024},	dioneir_60fps, 1, 0, DIONE_IR_MODE_1280x1024_60FPS},
 	/* Add modes with no device tree support after below */
 };
 
-static const struct camera_common_frmfmt dione1280_frmfmt[] = {
-	{{1280, 1024},	dioneir_60fps, 1, 0, DIONE_IR_MODE_1280x1024_60FPS},
-};
-
 static const struct regmap_range ctl_regmap_rw_ranges[] = {
 	regmap_reg_range(0x0000, 0x00ff),
 };
@@ -134,6 +139,7 @@ struct dione_struct {
 	struct regmap			*tx_regmap;
 	struct camera_common_data	*s_data;
 	struct tegracam_device		*tc_dev;
+	ktime_t					start_up;
 };
 
 
@@ -224,6 +230,10 @@ const struct tc358746_param dioneir_mode_params[] = {
 	dione1280_params
 };
 
+static int dione1280_i2c_read(struct i2c_client *client, u32 addr, u8 *buf, u16 len);
+static int dione1280_i2c_write32(struct i2c_client *client, u32 addr, u32 val);
+
+
 static inline int dioneir_read_reg(struct camera_common_data *s_data,
 	u16 addr, u8 *val)
 {
@@ -360,6 +370,11 @@ static int dioneir_power_on(struct camera_common_data *s_data)
 	return -ENODEV;
 }
 
+static int dioneir_power_off_dummy(struct camera_common_data *s_data)
+{
+	return 0;
+}
+
 static int dioneir_power_off(struct camera_common_data *s_data)
 {
 	int err = 0;
@@ -409,6 +424,9 @@ static int dioneir_power_put(struct tegracam_device *tc_dev)
 	if (unlikely(!pw))
 		return -EFAULT;
 
+	printk( KERN_ALERT "**** %s %i\n", __func__, __LINE__);
+	dioneir_power_off(s_data);
+
 	if (likely(pw->dvdd))
 		devm_regulator_put(pw->dvdd);
 
@@ -846,13 +864,37 @@ static int dione1280_set_mode(struct tegracam_device *tc_dev)
 {
 	struct dione_struct *priv = (struct dione_struct *)tegracam_get_privdata(tc_dev);
 	struct camera_common_data *s_data = priv->s_data;
+	int err;
 
 	printk( KERN_ALERT "**** %s %i   mode: %i   sensor_mode_id: %i\n",
 			__func__, __LINE__, s_data->mode, s_data->sensor_mode_id);
 	if (s_data->mode != DIONE_IR_MODE_1280x1024_60FPS)
 		return -EINVAL;
 
-	return dioneir_set_mode_common(tc_dev);
+	err = 0;
+	if (test_mode) {
+		while(ktime_ms_delta(ktime_get(), priv->start_up) < DIONE1280_STARTUP_TMO_MS)
+			msleep(100);
+
+		err = dione1280_i2c_write32(priv->fpga_client, DIONE1280_REG_ACQUISITION_STOP, 2);
+		printk( KERN_ALERT "**** %s %i   err: %i\n", __func__, __LINE__, err);
+		if (!err) {
+			msleep(300);
+			err = dione1280_i2c_write32(priv->fpga_client, DIONE1280_REG_ACQUISITION_SRC, 0);
+			printk( KERN_ALERT "**** %s %i   err: %i\n", __func__, __LINE__, err);
+		}
+
+		if (!err) {
+			msleep(300);
+			err = dione1280_i2c_write32(priv->fpga_client, DIONE1280_REG_ACQUISITION_STOP, 1);
+			printk( KERN_ALERT "**** %s %i   err: %i\n", __func__, __LINE__, err);
+		}
+	}
+
+	if (!err)
+		dioneir_set_mode_common(tc_dev);
+
+	return err;
 }
 
 
@@ -908,8 +950,8 @@ static int dioneir_stop_streaming(struct tegracam_device *tc_dev)
 }
 
 static struct camera_common_sensor_ops dione640_common_ops = {
-	.numfrmfmts = ARRAY_SIZE(dione640_frmfmt),
-	.frmfmt_table = dione640_frmfmt,
+	.numfrmfmts = ARRAY_SIZE(dioneir_frmfmt_common),
+	.frmfmt_table = dioneir_frmfmt_common,
 	.power_on = dioneir_power_on,
 	.power_off = dioneir_power_off,
 	.write_reg = dioneir_write_reg,
@@ -923,8 +965,8 @@ static struct camera_common_sensor_ops dione640_common_ops = {
 };
 
 static struct camera_common_sensor_ops dione1280_common_ops = {
-	.numfrmfmts = ARRAY_SIZE(dione640_frmfmt),
-	.frmfmt_table = dione640_frmfmt,
+	.numfrmfmts = ARRAY_SIZE(dioneir_frmfmt_common),
+	.frmfmt_table = dioneir_frmfmt_common,
 	.power_on = dioneir_power_on,
 	.power_off = dioneir_power_off,
 	.write_reg = dioneir_write_reg,
@@ -1057,6 +1099,29 @@ static int dione1280_i2c_read( struct i2c_client *client, u32 addr, u8 *buf, u16
 	return ret;
 }
 
+static int dione1280_i2c_write32(struct i2c_client *client, u32 addr, u32 val)
+{
+	u8 tmp_buf[10];
+	int ret, tmo, retry;
+
+	ret = 0;
+	*( (u32 *)tmp_buf ) = addr;
+	*( (u16 *)tmp_buf + 2 ) = 4;
+	memcpy(tmp_buf + 6, &val, 4);
+	retry = 4;
+	tmo = DIONE1280_I2C_TMO_MS;
+	ret = -1;
+	while (retry-- > 0) {
+		if (generic_i2c_write(client, tmp_buf, 10) == 1) {
+			ret = 0;
+			break;
+		}
+		msleep(tmo);
+		tmo <<= 2;
+	}
+
+	return ret;
+}
 
 static int detect_dione640(struct dione_struct *priv)
 {
@@ -1238,6 +1303,8 @@ static struct tegracam_device *dioneir_probe_one( struct dione_struct *priv,
 	strncpy(tc_dev->name, "dione_ir", sizeof(tc_dev->name));
 	tc_dev->dev_regmap_config = &ctl_regmap_config;
 	tc_dev->sensor_ops = ops;
+	if (quick_mode)
+		ops->power_off = dioneir_power_off_dummy;
 	tc_dev->v4l2sd_internal_ops = &dioneir_subdev_internal_ops;
 	tc_dev->tcctrl_ops = &dioneir_ctrl_ops;
 
@@ -1269,6 +1336,7 @@ static struct tegracam_device *dioneir_probe_one( struct dione_struct *priv,
 	if (!err)
 		err = dioneir_board_setup(priv);
 
+	priv->start_up = ktime_get();
     printk( KERN_ALERT "**** %s %i   err: %i\n", __func__, __LINE__, err);
 	if (err) {
 		if (!!tc_dev)
@@ -1277,6 +1345,11 @@ static struct tegracam_device *dioneir_probe_one( struct dione_struct *priv,
 		dev_err(dev, "board setup failed\n");
 	}
 
+	if (!test_mode && (priv->fpga_client != NULL)) {
+		i2c_unregister_device(priv->fpga_client);
+		priv->fpga_client = NULL;
+	}
+
 	return tc_dev;
 }
 
@@ -1298,48 +1371,9 @@ static int dioneir_probe(struct i2c_client *client,
 	if (!priv)
 		return -ENOMEM;
 
-#if 0
-	tc_dev = devm_kzalloc(dev, sizeof(struct tegracam_device), GFP_KERNEL);
-	if (!tc_dev)
-		return -ENOMEM;
-
-	priv->tc35_client = tc_dev->client = client;
-	tc_dev->dev = dev;
-	strncpy(tc_dev->name, "dione_ir", sizeof(tc_dev->name));
-	tc_dev->dev_regmap_config = &ctl_regmap_config;
-	tc_dev->sensor_ops = &dione640_common_ops;
-	tc_dev->v4l2sd_internal_ops = &dioneir_subdev_internal_ops;
-	tc_dev->tcctrl_ops = &dioneir_ctrl_ops;
-
-	err = tegracam_device_register(tc_dev);
-	if (err) {
-		dev_err(dev, "tegra camera driver registration failed\n");
-		return err;
-	}
-
-	priv->tc_dev = tc_dev;
-	priv->s_data = tc_dev->s_data;
-	priv->subdev = &tc_dev->s_data->subdev;
-	tegracam_set_privdata(tc_dev, (void *)priv);
-
-	priv->tx_regmap = devm_regmap_init_i2c(client,
-					       &tx_regmap_config);
-	if (IS_ERR(priv->tx_regmap)) {
-		dev_err(dev, "tx_regmap init failed: %ld\n",
-			PTR_ERR(priv->tx_regmap));
-		tegracam_device_unregister(tc_dev);
-		return -ENODEV;
-	}
-
-	err = dioneir_board_setup(priv);
-	if (err) {
-		tegracam_device_unregister(tc_dev);
-		dev_err(dev, "board setup failed\n");
-		return err;
-	}
-
-#else
 	priv->tc35_client = client;
+	if (test_mode)
+		quick_mode = 1;
 
     printk( KERN_ALERT "**** %s %i\n", __func__, __LINE__);
 	tc_dev = dioneir_probe_one(priv, &dione640_common_ops);
@@ -1351,24 +1385,19 @@ static int dioneir_probe(struct i2c_client *client,
 	}
 
 	if (!!tc_dev) {
-#endif
-
-	err = tegracam_v4l2subdev_register(tc_dev, true);
-	if (err) {
-		dev_err(dev, "tegra camera subdev registration failed\n");
-		tegracam_device_unregister(tc_dev);
-		return err;
-	}
-
-	dev_info(dev, "detected Dione IR sensor\n");
+		err = tegracam_v4l2subdev_register(tc_dev, true);
+		if (err) {
+			dev_err(dev, "tegra camera subdev registration failed\n");
+			tegracam_device_unregister(tc_dev);
+			return err;
+		}
 
-	return 0;
+		dev_info(dev, "detected Dione IR sensor\n");
 
-#if 1
+		return 0;
 	}
 
 	return -ENODEV;
-#endif
 }
 
 static int dioneir_remove(struct i2c_client *client)
diff --git a/nvidia/platform/t210/porg/kernel-dts/porg-platforms/tegra210-camera-rbpcv2-dione-ir.dtsi b/nvidia/platform/t210/porg/kernel-dts/porg-platforms/tegra210-camera-rbpcv2-dione-ir.dtsi
index 6644d1ae0e9b..445635538653 100644
--- a/nvidia/platform/t210/porg/kernel-dts/porg-platforms/tegra210-camera-rbpcv2-dione-ir.dtsi
+++ b/nvidia/platform/t210/porg/kernel-dts/porg-platforms/tegra210-camera-rbpcv2-dione-ir.dtsi
@@ -161,7 +161,6 @@
 				* Sensor embedded metadata height in units of rows.
 				* If sensor does not support embedded metadata value should be 0.
 				*/
-#if 0
 				mode0 { /* DIONE_IR_MODE_640x480_60FPS */
 					mclk_khz = "24000";
 					num_lanes = "2";
@@ -249,7 +248,6 @@
 
 					embedded_metadata_height = "0";
 				};
-#endif
 
 				ports {
 					#address-cells = <1>;
-- 
2.25.1

