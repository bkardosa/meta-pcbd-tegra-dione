From 4faca17b49cd01a15a15ab4219e6728294a77d09 Mon Sep 17 00:00:00 2001
From: Botond Kardos <bkardos70@gmail.com>
Date: Thu, 13 Jan 2022 17:23:12 +0100
Subject: [PATCH] test_mode works with Dione640 sensor

---
 nvidia/drivers/media/i2c/dione_ir.c | 98 +++++++++--------------------
 1 file changed, 31 insertions(+), 67 deletions(-)

diff --git a/nvidia/drivers/media/i2c/dione_ir.c b/nvidia/drivers/media/i2c/dione_ir.c
index b6670ab925f9..372ffdad1cac 100644
--- a/nvidia/drivers/media/i2c/dione_ir.c
+++ b/nvidia/drivers/media/i2c/dione_ir.c
@@ -38,6 +38,8 @@
 #define DIONE640_REG_WIDTH_MAX         0x0002f028
 #define DIONE640_REG_FIRMWARE_VERSION  0x2000e000
 
+#define DIONE640_STARTUP_TMO_MS        12000
+
 #define DIONE1280_I2C_ADDR             0x5b
 #define DIONE1280_REG_WIDTH_MAX        0x0002f028
 #define DIONE1280_REG_HEIGHT_MAX       0x0002f02c
@@ -240,7 +242,6 @@ static inline int dioneir_read_reg(struct camera_common_data *s_data,
 	int err = 0;
 	u32 reg_val = 0;
 
-	printk( KERN_ALERT "**** %s %i\n", __func__, __LINE__);
 	err = regmap_read(s_data->regmap, addr, &reg_val);
 	*val = reg_val & 0xff;
 
@@ -252,7 +253,6 @@ static inline int dioneir_write_reg(struct camera_common_data *s_data,
 {
 	int err = 0;
 
-	printk( KERN_ALERT "**** %s %i\n", __func__, __LINE__);
 	err = regmap_write(s_data->regmap, addr, val);
 	if (err)
 		dev_err(s_data->dev, "%s: i2c write failed, 0x%x = %x",
@@ -301,7 +301,6 @@ static int dioneir_power_on(struct camera_common_data *s_data)
 	struct camera_common_pdata *pdata = s_data->pdata;
 	struct device *dev = s_data->dev;
 
-	printk( KERN_ALERT "**** %s %i\n", __func__, __LINE__);
 	dev_dbg(dev, "%s: power on\n", __func__);
 	if (pdata && pdata->power_on) {
 		err = pdata->power_on(pw);
@@ -382,7 +381,6 @@ static int dioneir_power_off(struct camera_common_data *s_data)
 	struct camera_common_pdata *pdata = s_data->pdata;
 	struct device *dev = s_data->dev;
 
-	printk( KERN_ALERT "**** %s %i\n", __func__, __LINE__);
 	dev_dbg(dev, "%s: power off\n", __func__);
 
 	if (pdata && pdata->power_off) {
@@ -420,11 +418,9 @@ static int dioneir_power_put(struct tegracam_device *tc_dev)
 	struct camera_common_power_rail *pw = s_data->power;
 	struct dione_struct *priv = (struct dione_struct *)tegracam_get_privdata(tc_dev);
 
-	printk( KERN_ALERT "**** %s %i\n", __func__, __LINE__);
 	if (unlikely(!pw))
 		return -EFAULT;
 
-	printk( KERN_ALERT "**** %s %i\n", __func__, __LINE__);
 	dioneir_power_off(s_data);
 
 	if (likely(pw->dvdd))
@@ -460,7 +456,6 @@ static int dioneir_power_get(struct tegracam_device *tc_dev)
 	struct clk *parent;
 	int err = 0;
 
-	printk( KERN_ALERT "**** %s %i\n", __func__, __LINE__);
 	if (!pdata) {
 		dev_err(dev, "pdata missing\n");
 		return -EFAULT;
@@ -803,7 +798,7 @@ static int tc358746_enable_csi_module(struct regmap *regmap, int lane_num)
 	return err;
 }
 
-static int dioneir_set_mode_common(struct tegracam_device *tc_dev)
+static int dioneir_set_mode_common(struct tegracam_device *tc_dev, s64 tmo_startup)
 {
 	struct dione_struct *priv = (struct dione_struct *)tegracam_get_privdata(tc_dev);
 	struct camera_common_data *s_data = priv->s_data;
@@ -812,11 +807,31 @@ static int dioneir_set_mode_common(struct tegracam_device *tc_dev)
 	const struct tc358746_param *csi_setting;
 	int err;
 
+	err = 0;
+	if (test_mode) {
+		/* wait until FPGA in sensor finishes booting up */
+		while(ktime_ms_delta(ktime_get(), priv->start_up) < tmo_startup)
+			msleep(100);
+
+		/* enable test pattern in the sensor module */
+		err = dione1280_i2c_write32(priv->fpga_client, DIONE1280_REG_ACQUISITION_STOP, 2);
+		if (!err) {
+			msleep(300);
+			err = dione1280_i2c_write32(priv->fpga_client, DIONE1280_REG_ACQUISITION_SRC, 0);
+		}
+
+		if (!err) {
+			msleep(300);
+			err = dione1280_i2c_write32(priv->fpga_client, DIONE1280_REG_ACQUISITION_STOP, 1);
+		}
+	}
+
 	csi_setting = &dioneir_mode_params[s_data->mode];
 
 	regmap_write(ctl_regmap, DBG_ACT_LINE_CNT, 0);
 
-	err = tc358746_sreset(ctl_regmap);
+	if (!err)
+		err = tc358746_sreset(ctl_regmap);
 	if (err) {
 		dev_err(tc_dev->dev, "Failed to reset chip\n");
 		return err;
@@ -852,49 +867,21 @@ static int dione640_set_mode(struct tegracam_device *tc_dev)
 	struct dione_struct *priv = (struct dione_struct *)tegracam_get_privdata(tc_dev);
 	struct camera_common_data *s_data = priv->s_data;
 
-	printk( KERN_ALERT "**** %s %i   mode: %i   sensor_mode_id: %i\n",
-			__func__, __LINE__, s_data->mode, s_data->sensor_mode_id);
 	if (s_data->mode != DIONE_IR_MODE_640x480_60FPS)
 		return -EINVAL;
 
-	return dioneir_set_mode_common(tc_dev);
+	return dioneir_set_mode_common(tc_dev, DIONE640_STARTUP_TMO_MS);
 }
 
 static int dione1280_set_mode(struct tegracam_device *tc_dev)
 {
 	struct dione_struct *priv = (struct dione_struct *)tegracam_get_privdata(tc_dev);
 	struct camera_common_data *s_data = priv->s_data;
-	int err;
 
-	printk( KERN_ALERT "**** %s %i   mode: %i   sensor_mode_id: %i\n",
-			__func__, __LINE__, s_data->mode, s_data->sensor_mode_id);
 	if (s_data->mode != DIONE_IR_MODE_1280x1024_60FPS)
 		return -EINVAL;
 
-	err = 0;
-	if (test_mode) {
-		while(ktime_ms_delta(ktime_get(), priv->start_up) < DIONE1280_STARTUP_TMO_MS)
-			msleep(100);
-
-		err = dione1280_i2c_write32(priv->fpga_client, DIONE1280_REG_ACQUISITION_STOP, 2);
-		printk( KERN_ALERT "**** %s %i   err: %i\n", __func__, __LINE__, err);
-		if (!err) {
-			msleep(300);
-			err = dione1280_i2c_write32(priv->fpga_client, DIONE1280_REG_ACQUISITION_SRC, 0);
-			printk( KERN_ALERT "**** %s %i   err: %i\n", __func__, __LINE__, err);
-		}
-
-		if (!err) {
-			msleep(300);
-			err = dione1280_i2c_write32(priv->fpga_client, DIONE1280_REG_ACQUISITION_STOP, 1);
-			printk( KERN_ALERT "**** %s %i   err: %i\n", __func__, __LINE__, err);
-		}
-	}
-
-	if (!err)
-		dioneir_set_mode_common(tc_dev);
-
-	return err;
+	return dioneir_set_mode_common(tc_dev, DIONE1280_STARTUP_TMO_MS);
 }
 
 
@@ -905,7 +892,6 @@ static int dioneir_start_streaming(struct tegracam_device *tc_dev)
 	struct regmap *ctl_regmap = s_data->regmap;
 	int err;
 
-	printk( KERN_ALERT "**** %s %i\n", __func__, __LINE__);
 	err = regmap_write(ctl_regmap, PP_MISC, 0);
 	if (!err)
 		err = regmap_update_bits(ctl_regmap, CONFCTL,
@@ -925,7 +911,6 @@ static int dioneir_stop_streaming(struct tegracam_device *tc_dev)
 	struct regmap *tx_regmap = priv->tx_regmap;
 	int err;
 
-	printk( KERN_ALERT "**** %s %i\n", __func__, __LINE__);
 	err = regmap_update_bits(ctl_regmap, PP_MISC, PP_MISC_FRMSTOP_MASK,
 				 PP_MISC_FRMSTOP_MASK);
 	if (!err)
@@ -1134,14 +1119,12 @@ static int detect_dione640(struct dione_struct *priv)
 	msleep(200);
 
 	priv->fpga_client = i2c_new_dummy(priv->tc35_client->adapter, DIONE640_I2C_ADDR);
-    printk( KERN_ALERT "**** %s %i   fpga_client: 0x%08lx\n", __func__, __LINE__, (long )priv->fpga_client );
 
 	if (!priv->fpga_client)
 		ret = -ENODEV;
 
 	if (!ret) {
 		ret = dione640_i2c_read(priv->fpga_client, DIONE640_REG_WIDTH_MAX, (u8 *)&reg_val, 4);
-		printk( KERN_ALERT "**** %s %i   ret: %i   WidthMax: %i\n", __func__, __LINE__, ret, (int )reg_val);
 		if (ret || (reg_val != 640))
 			ret = -ENODEV;
 	}
@@ -1154,8 +1137,6 @@ static int detect_dione640(struct dione_struct *priv)
 				buf[cnt--] = 0;
 			dev_info(dev, "FirmwareVersion: %s\n", buf);
 		}
-		else
-			printk( KERN_ALERT "**** %s %i   ret: %i\n", __func__, __LINE__, ret);
 	}
 
 	if (ret)
@@ -1178,14 +1159,12 @@ static int detect_dione1280(struct dione_struct *priv)
 	msleep(500);
 
 	priv->fpga_client = i2c_new_dummy(priv->tc35_client->adapter, DIONE1280_I2C_ADDR);
-    printk( KERN_ALERT "**** %s %i   fpga_client: 0x%08lx\n", __func__, __LINE__, (long )priv->fpga_client );
 
 	if (!priv->fpga_client)
 		ret = -ENODEV;
 
 	if (!ret) {
 		ret = dione1280_i2c_read(priv->fpga_client, DIONE1280_REG_WIDTH_MAX, (u8 *)&reg_val, 4);
-		printk( KERN_ALERT "**** %s %i   ret: %i   WidthMax: %i\n", __func__, __LINE__, ret, (int )reg_val);
 		if (ret || (reg_val != 1280))
 			ret = -ENODEV;
 	}
@@ -1198,8 +1177,6 @@ static int detect_dione1280(struct dione_struct *priv)
 				buf[cnt--] = 0;
 			dev_info(dev, "FirmwareVersion: %s\n", buf);
 		}
-		else
-		  printk( KERN_ALERT "**** %s %i   ret: %i\n", __func__, __LINE__, ret);
 	}
 
 	if (ret)
@@ -1240,11 +1217,8 @@ static int dioneir_board_setup(struct dione_struct *priv)
 	if (s_data->ops == &dione1280_common_ops)
 		err = detect_dione1280(priv);
 
-	printk( KERN_ALERT "**** %s %i   err: %i\n", __func__, __LINE__, err);
-	if (err) {
-		dev_err(dev, "%s: error, no sensor found\n", __func__);
+	if (err)
 		goto err_reg_probe;
-	}
 
 	/* Probe sensor model id registers */
 	err = regmap_read(ctl_regmap, CHIPID, &reg_val);
@@ -1292,12 +1266,10 @@ static struct tegracam_device *dioneir_probe_one( struct dione_struct *priv,
 	struct device *dev = &priv->tc35_client->dev;
 	int err;
 
-    printk( KERN_ALERT "**** %s %i   dev: 0x%08lx\n", __func__, __LINE__, (long )dev);
 	tc_dev = devm_kzalloc(dev, sizeof(struct tegracam_device), GFP_KERNEL);
 	if (!tc_dev)
 		return NULL;
 
-    printk( KERN_ALERT "**** %s %i\n", __func__, __LINE__);
 	tc_dev->client = priv->tc35_client;
 	tc_dev->dev = dev;
 	strncpy(tc_dev->name, "dione_ir", sizeof(tc_dev->name));
@@ -1309,7 +1281,6 @@ static struct tegracam_device *dioneir_probe_one( struct dione_struct *priv,
 	tc_dev->tcctrl_ops = &dioneir_ctrl_ops;
 
 	err = tegracam_device_register(tc_dev);
-    printk( KERN_ALERT "**** %s %i   err: %i\n", __func__, __LINE__, err);
 	if (err) {
 		devm_kfree(tc_dev->dev, tc_dev);
 		tc_dev = NULL;
@@ -1324,7 +1295,6 @@ static struct tegracam_device *dioneir_probe_one( struct dione_struct *priv,
 
 		priv->tx_regmap = devm_regmap_init_i2c(priv->tc35_client,
 											   &tx_regmap_config);
-		printk( KERN_ALERT "**** %s %i\n", __func__, __LINE__);
 		if (IS_ERR(priv->tx_regmap)) {
 			dev_err(dev, "tx_regmap init failed: %ld\n",
 					PTR_ERR(priv->tx_regmap));
@@ -1332,17 +1302,14 @@ static struct tegracam_device *dioneir_probe_one( struct dione_struct *priv,
 		}
 	}
 
-    printk( KERN_ALERT "**** %s %i   err: %i\n", __func__, __LINE__, err);
 	if (!err)
 		err = dioneir_board_setup(priv);
 
 	priv->start_up = ktime_get();
-    printk( KERN_ALERT "**** %s %i   err: %i\n", __func__, __LINE__, err);
 	if (err) {
 		if (!!tc_dev)
 			tegracam_device_unregister(tc_dev);
 		tc_dev = NULL;
-		dev_err(dev, "board setup failed\n");
 	}
 
 	if (!test_mode && (priv->fpga_client != NULL)) {
@@ -1366,7 +1333,6 @@ static int dioneir_probe(struct i2c_client *client,
 	if (!IS_ENABLED(CONFIG_OF) || !client->dev.of_node)
 		return -EINVAL;
 
-    printk( KERN_ALERT "**** %s %i   dev: 0x%08lx\n", __func__, __LINE__, (long )dev);
 	priv = devm_kzalloc(dev, sizeof(struct dione_struct), GFP_KERNEL);
 	if (!priv)
 		return -ENOMEM;
@@ -1375,16 +1341,14 @@ static int dioneir_probe(struct i2c_client *client,
 	if (test_mode)
 		quick_mode = 1;
 
-    printk( KERN_ALERT "**** %s %i\n", __func__, __LINE__);
 	tc_dev = dioneir_probe_one(priv, &dione640_common_ops);
 
-    printk( KERN_ALERT "**** %s %i   tc_dev:0x%08lx\n", __func__, __LINE__, (long )tc_dev);
-	if (!tc_dev) {
+	if (!tc_dev)
 		tc_dev = dioneir_probe_one(priv, &dione1280_common_ops);
-		printk( KERN_ALERT "**** %s %i   tc_dev:0x%08lx\n", __func__, __LINE__, (long )tc_dev);
-	}
 
-	if (!!tc_dev) {
+	if (!tc_dev)
+		dev_err(dev, "%s: error, no sensor found\n", __func__);
+	else {
 		err = tegracam_v4l2subdev_register(tc_dev, true);
 		if (err) {
 			dev_err(dev, "tegra camera subdev registration failed\n");
-- 
2.25.1

