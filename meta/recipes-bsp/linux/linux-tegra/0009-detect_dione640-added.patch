From b6a506b97a0c9bf54ae47e327d58fd7bafc35868 Mon Sep 17 00:00:00 2001
From: Botond Kardos <bkardos70@gmail.com>
Date: Fri, 7 Jan 2022 18:10:16 +0100
Subject: [PATCH] detect_dione640() added, rest of code still dione640
 dependent

---
 nvidia/drivers/media/i2c/dione_ir.c           | 128 +++++++++++++++++-
 .../tegra210-camera-rbpcv2-dione-ir.dtsi      |  44 ++++++
 2 files changed, 168 insertions(+), 4 deletions(-)

diff --git a/nvidia/drivers/media/i2c/dione_ir.c b/nvidia/drivers/media/i2c/dione_ir.c
index 7095b08cc6b8..3212c231be0b 100644
--- a/nvidia/drivers/media/i2c/dione_ir.c
+++ b/nvidia/drivers/media/i2c/dione_ir.c
@@ -32,11 +32,19 @@
 
 #include "tc358746_regs.h"
 
+
+#define DIONE640_I2C_ADDR  0x5a
+#define DIONE640_REG_WIDTH            0x00080188
+#define DIONE640_REG_WIDTH_MAX        0x0002f028
+#define DIONE640_REG_FIRMWARE_VERSION 0x2000e000
+
+
 static int test_mode = 0;
 module_param(test_mode, int, 0644);
 
 enum {
-	DIONEIR_MODE_640x480_60FPS,
+	DIONE_IR_MODE_640x480_60FPS,
+	DIONE_IR_MODE_1280x124_60FPS,
 };
 
 static const int dioneir_60fps[] = {
@@ -48,7 +56,7 @@ static const int dioneir_60fps[] = {
  * device tree!
  */
 static const struct camera_common_frmfmt dioneir_frmfmt[] = {
-	{{640, 480},	dioneir_60fps, 1, 0, DIONEIR_MODE_640x480_60FPS},
+	{{640, 480},	dioneir_60fps, 1, 0, DIONE_IR_MODE_640x480_60FPS},
 	/* Add modes with no device tree support after below */
 };
 
@@ -110,7 +118,8 @@ static const u32 ctrl_cid_list[] = {
 };
 
 struct dione_struct {
-	struct i2c_client		*i2c_client;
+	struct i2c_client		*tc35_client;
+	struct i2c_client		*fpga_client;
 	struct v4l2_subdev		*subdev;
 	struct regmap			*tx_regmap;
 	struct camera_common_data	*s_data;
@@ -292,6 +301,7 @@ static int dioneir_power_put(struct tegracam_device *tc_dev)
 {
 	struct camera_common_data *s_data = tc_dev->s_data;
 	struct camera_common_power_rail *pw = s_data->power;
+	struct dione_struct *priv = (struct dione_struct *)tegracam_get_privdata(tc_dev);
 
 	if (unlikely(!pw))
 		return -EFAULT;
@@ -312,6 +322,11 @@ static int dioneir_power_put(struct tegracam_device *tc_dev)
 	if (likely(pw->reset_gpio))
 		gpio_free(pw->reset_gpio);
 
+	if (priv->fpga_client != NULL) {
+		i2c_unregister_device(priv->fpga_client);
+		priv->fpga_client = NULL;
+	}
+
 	return 0;
 }
 
@@ -935,6 +950,95 @@ static struct camera_common_sensor_ops dioneir_common_ops = {
 	.stop_streaming = dioneir_stop_streaming,
 };
 
+static int dione640_i2c_read(struct i2c_client *client, u32 dev_addr, void *dst,
+							size_t len)
+{
+	struct i2c_msg msgs[2];
+	u8 tmp_buf[72];
+	int ret;
+
+	ret = 0;
+	if (len > sizeof(tmp_buf) - 2)
+		ret = -1;
+
+	if (!ret) {
+		*( (u32 *)tmp_buf ) = dev_addr;
+		*( (u16 *)tmp_buf + 2 ) = len;
+
+		msgs[0].addr = client->addr;
+		msgs[0].flags = 0;
+		msgs[0].len = 6;
+		msgs[0].buf = tmp_buf;
+
+		msgs[1].addr = client->addr;
+		msgs[1].flags = I2C_M_RD;
+		msgs[1].len = len + 2;
+		msgs[1].buf = tmp_buf;
+
+		if (i2c_transfer(client->adapter, msgs, ARRAY_SIZE(msgs)) != 2)
+			ret = -1;
+	}
+
+	if (!ret) {
+		if ((tmp_buf[0] != 0) || (tmp_buf[1] != 0))
+			ret = -1;
+		else
+			memcpy(dst, tmp_buf+2, len);
+	}
+
+	return ret;
+} /* dione640_i2c_read */
+
+
+static int detect_dione640(struct dione_struct *priv)
+{
+	struct device *dev = priv->s_data->dev;
+	u8 buf[64];
+	u32 reg_val;
+	int cnt;
+	int ret = 0;
+
+	msleep(200);
+
+	priv->fpga_client = i2c_new_dummy(priv->tc35_client->adapter, DIONE640_I2C_ADDR);
+    printk( KERN_ALERT "**** %s %i   fpga_client: 0x%08lx\n", __func__, __LINE__, (long )priv->fpga_client );
+
+	if (!priv->fpga_client)
+		ret = -ENODEV;
+
+	if (!ret) {
+		ret = dione640_i2c_read(priv->fpga_client, DIONE640_REG_WIDTH_MAX, (u8 *)&reg_val, 4);
+		printk( KERN_ALERT "**** %s %i   ret: %i   WidthMax: %i\n", __func__, __LINE__, ret, (int )reg_val);
+		if (ret || (reg_val != 640))
+			ret = -ENODEV;
+	}
+
+	if (!ret ) {
+		ret = dione640_i2c_read(priv->fpga_client, DIONE640_REG_FIRMWARE_VERSION, buf, 64);
+		if (!ret) {
+			cnt = 63;
+			while ((cnt > 0) && (buf[cnt] == 0xff))
+				buf[cnt--] = 0;
+			dev_info(dev, "FirmwareVersion: %s\n", buf);
+		}
+		else
+			printk( KERN_ALERT "**** %s %i   ret: %i\n", __func__, __LINE__, ret);
+	}
+
+	if (ret)
+		if (priv->fpga_client != NULL) {
+			i2c_unregister_device(priv->fpga_client);
+			priv->fpga_client = NULL;
+		}
+
+	return ret;
+}
+
+static int detect_dione1280(struct dione_struct *priv)
+{
+	return -1;
+}
+
 static int dioneir_board_setup(struct dione_struct *priv)
 {
 	struct camera_common_data *s_data = priv->s_data;
@@ -958,6 +1062,22 @@ static int dioneir_board_setup(struct dione_struct *priv)
 		goto err_power_on;
 	}
 
+	do {
+	  err = detect_dione640(priv);
+	  if (!err)
+		break;
+
+	  err = detect_dione1280(priv);
+	  if (!err)
+		break;
+	} while(0);
+
+	printk( KERN_ALERT "**** %s %i   err: %i\n", __func__, __LINE__, err);
+	if (err) {
+		dev_err(dev, "%s: error, no sensor found\n", __func__);
+		goto err_reg_probe;
+	}
+
 	/* Probe sensor model id registers */
 	err = regmap_read(ctl_regmap, CHIPID, &reg_val);
 	if (err) {
@@ -1018,7 +1138,7 @@ static int dioneir_probe(struct i2c_client *client,
 	if (!tc_dev)
 		return -ENOMEM;
 
-	priv->i2c_client = tc_dev->client = client;
+	priv->tc35_client = tc_dev->client = client;
 	tc_dev->dev = dev;
 	strncpy(tc_dev->name, "dione_ir", sizeof(tc_dev->name));
 	tc_dev->dev_regmap_config = &ctl_regmap_config;
diff --git a/nvidia/platform/t210/porg/kernel-dts/porg-platforms/tegra210-camera-rbpcv2-dione-ir.dtsi b/nvidia/platform/t210/porg/kernel-dts/porg-platforms/tegra210-camera-rbpcv2-dione-ir.dtsi
index d4f03ed52bf3..e10c570d22c7 100644
--- a/nvidia/platform/t210/porg/kernel-dts/porg-platforms/tegra210-camera-rbpcv2-dione-ir.dtsi
+++ b/nvidia/platform/t210/porg/kernel-dts/porg-platforms/tegra210-camera-rbpcv2-dione-ir.dtsi
@@ -205,6 +205,50 @@
 					embedded_metadata_height = "0";
 				};
 
+				mode1 { /* DIONE_IR_MODE_1280x1024_60FPS */
+					mclk_khz = "24000";
+					num_lanes = "2";
+					tegra_sinterface = "serial_a";
+					phy_mode = "DPHY";
+					discontinuous_clk = "yes";
+					dpcm_enable = "false";
+					cil_settletime = "0";
+
+					active_w = "1280";
+					active_h = "1024";
+					pixel_t = "rgb_rgb88824";
+					readout_orientation = "0";
+					line_length = "1334";
+					/* inherent_gain = "1"; */
+					/* mclk_multiplier = "9.33"; */
+					pix_clk_hz = "83000000";
+
+					/* unused */
+					gain_factor = "16";
+					exposure_factor = "1000000";
+					min_gain_val = "16"; /* 1.00x */
+					max_gain_val = "170"; /* 10.66x */
+					step_gain_val = "1";
+					default_gain = "16"; /* 1.00x */
+					min_hdr_ratio = "1";
+					max_hdr_ratio = "1";
+
+					/* framerate */
+					framerate_factor = "1000000";
+					min_framerate = "40000000"; /* 40 fps */
+					max_framerate = "62000000"; /* 62 fps */
+					step_framerate = "1";
+					default_framerate = "60756000"; /* 60.756 fps */
+
+					/* unused */
+					min_exp_time = "13"; /* us */
+					max_exp_time = "683709"; /* us */
+					step_exp_time = "1";
+					default_exp_time = "2495"; /* us */
+
+					embedded_metadata_height = "0";
+				};
+
 				ports {
 					#address-cells = <1>;
 					#size-cells = <0>;
-- 
2.25.1

